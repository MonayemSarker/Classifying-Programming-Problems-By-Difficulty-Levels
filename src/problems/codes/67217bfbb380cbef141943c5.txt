class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        l1,l2 = len(nums1),len(nums2)
        total = l1+l2
        if total == 0:
            return 0
        elif l1 == 0:
            return self.median(nums2,l2)
        elif l2 == 0:
            return self.median(nums1,l1)

        m = 0
        n = 0
        temp = []

        while (m+n < (total//2)+1):
            if m == l1:
                temp.append(nums2[n])
                n+=1
            elif n == l2:
                temp.append(nums1[m])
                m+=1
            elif nums1[m] <= nums2[n]:
                temp.append(nums1[m])
                m+=1
            else:
                temp.append(nums2[n])
                n+=1
        
        if total%2==1:
            return temp[total//2]
        else:
            return (temp[total//2] + temp[(total//2)-1])/2 
        

    def median(self, nums, l):
        if l%2==1:
            return nums[l//2]
        else:
            return (nums[l//2] + nums[(l//2)-1])/2    
